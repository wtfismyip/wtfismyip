server {
	listen 80;
	listen [::]:80;
	server_name tshtf.com;
	rewrite ^/$ https://www.tshtf.com redirect;
}


server {
        server_name tshtf.com;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        #listen 443 ssl default_server;
        #listen [::]:443 ssl default_server;
        ssl_certificate /etc/nginx/certs/wtf.ecc.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.ecc.key.pem;
        ssl_certificate /etc/nginx/certs/wtf.rsa.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.rsa.key.pem;
	rewrite ^/$ https://www.tshtf.com redirect;
}

server {
        listen 80;
	listen [::]:80;
        server_name ruoho.org;
        rewrite ^/$ https://www.ruoho.org redirect;
}

server {
        server_name ruoho.org;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        #listen 443 ssl default_server;
        #listen [::]:443 ssl default_server;
        ssl_certificate /etc/nginx/certs/wtf.ecc.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.ecc.key.pem;
        ssl_certificate /etc/nginx/certs/wtf.rsa.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.rsa.key.pem;
        rewrite ^/$ https://www.ruoho.org redirect;
}

server {
        listen 80;
        listen [::]:80;
        server_name gnu.gl;
        rewrite ^/$ https://www.gnu.gl redirect;
}

server {
        server_name gnu.gl;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        #listen 443 ssl default_server;
        #listen [::]:443 ssl default_server;
        ssl_certificate /etc/nginx/certs/wtf.ecc.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.ecc.key.pem;
        ssl_certificate /etc/nginx/certs/wtf.rsa.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.rsa.key.pem;
        rewrite ^/$ https://www.gnu.gl redirect;
}

server {
        server_name wtfismyip.com ipv4.wtfismyip.com ipv6.wtfismyip.com www.wtfismyip.com;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
	listen 80;
	listen [::]:80 default_server;
	root /var/www/html;
        ssl_certificate /etc/nginx/certs/wtf.ecc.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.ecc.key.pem;
        ssl_certificate /etc/nginx/certs/wtf.rsa.cert.pem;
        ssl_certificate_key /etc/nginx/certs/wtf.rsa.key.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/dhparam.pem;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-GCM-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
        ssl_ecdh_curve secp384r1:prime256v1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

	location /js2 {
		types {} default_type "application/json";
	}

	location /why {
		types {} default_type "text/html; charset=utf-8";
	}

	location /automation {
		types {} default_type "text/html; charset=utf-8";
	}

	location /donate {
		types {} default_type "text/html; charset=utf-8";
	}

	location /privacy {
		types {} default_type "text/html; charset=utf-8";
	}

	location / {
		try_files $uri @backend;
	}

        location @backend {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_pass http://172.19.1.200:8080;
        }
}
